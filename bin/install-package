#!/bin/bash

package="$1"
os=$(uname -s)
s_flag=false

while [ "$#" -gt 0 ]; do
    case "$1" in
        -s) s_flag=true ;;
        *) ;;
    esac

    shift 
done

# Validate if package is defined
if ! output=$(yq ".packages.$package" < "$yaml_file") || [ -z "$output" ] || [ "$output" = "null" ]; then
    ! $s_flag && echo "Package '$package' is not defined in '$yaml_file'."
    exit 1
fi

# Validate if there are cyclic dependencies
if ! output=$(bin/df deps-cd "$package"); then
    ! $s_flag && echo "$output"
    exit 1
fi

# Validate if OS is defined
if ! output=$(yq ".packages.$package.$os" < "$yaml_file") || [ -z "$output" ] || [ "$output" = "null" ]; then
    ! $s_flag && echo "Package's '$package' OS '$os' is not defined in '$yaml_file'."
    exit 1
fi

# Validate if 'check' is defined
if ! output=$(yq ".packages.$package.$os.check" < "$yaml_file") || [ -z "$output" ] || [ "$output" = "null" ]; then
    ! $s_flag && echo "Missing 'check' entry on 'packages.$package.$os' in '$yaml_file'."
    exit 1
fi

# Validate if 'install' is defined
if ! output=$(yq ".packages.$package.$os.install" < "$yaml_file") || [ -z "$output" ] || [ "$output" = "null" ]; then
    ! $s_flag && echo "Missing 'install' entry on 'packages.$package.$os' in '$yaml_file'."
    exit 1
fi

install_package() {
    local package=$1

    install=$(yq ".packages.$package.$os.install" < "$yaml_file")

    if ! install_output=$(eval "$install"); then 
        ! $s_flag && echo "Failed installing package '$package'. Error: $install_output"
        exit 1
    fi

    ! $s_flag && echo "Successfully installed package '$package'."
}

walk_deps_and_install() {
    local package=$1

    mapfile -t deps < <(bin/df deps-list "$package")

    for dep in "${deps[@]}"; do
        walk_deps_and_install "$dep" 
    done

    install_package "$package"
}

if [ -n "$package" ]; then
    walk_deps_and_install "$package" 
else
    # Install all packages
    mapfile -t packages < <(bin/df list)

    for package in "${packages[@]}"; do
        walk_deps_and_install "$package" 
    done
fi

exit 0