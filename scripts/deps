#!/bin/bash

if [ -z "$DFM_SUBCOMMAND" ]; then
    echo "Subcommand $0 should be called using 'dfm' command."
    exit 1
fi

if [ "$#" -lt 1 ]; then
    echo "Usage: $0 <package>"
    exit 1
fi

package="$1"
os=$(uname -s)
os_arch="$(uname -m)"
os_with_arch="$os/$os_arch"
os_key_to_use="$os_with_arch"

# Validate if package is defined
if ! output=$(yq ".packages.$package" < "$DFM_YAML") || [ -z "$output" ] || [ "$output" = "null" ]; then
    echo "Package '$package' is not defined in '$DFM_YAML'."
    exit 1
fi

# Check for empty deps or missing entry
if ! output=$(yq ".packages.$package.$os_key_to_use.deps" < "$DFM_YAML") || [ -z "$output" ] || [ "$output" = "null" ]; then
    os_key_to_use="$os"

    if ! output=$(yq ".packages.$package.$os_key_to_use.deps" < "$DFM_YAML") || [ -z "$output" ] || [ "$output" = "null" ]; then
        exit 0
    fi
fi

# Get deps and output
deps=()

while IFS= read -r line; do
    deps+=("$line")
done < <(yq ".packages.$package.$os_key_to_use.deps" < "$DFM_YAML" | sed 's/^- //')

for dep in "${deps[@]}"; do
    echo "$dep"
done

exit 0